
from unittest import TestSuite
from unittest import main as unitTestMain

from codeallybasic.Dimensions import Dimensions
from codeallybasic.Position import Position

from pygitissue2todoist.general.GitHubURLOption import GitHubURLOption
from pygitissue2todoist.general.Preferences import Preferences

from tests.ProjectTestBase import ProjectTestBase


class TestPreferences(ProjectTestBase):
    """
    Auto generated by the one and only:
        Gato Malo â€“ Humberto A. Sanchez II
        Generated: 16 June 2024
    """

    @classmethod
    def setUpClass(cls):
        super().setUpClass()

    def setUp(self):
        super().setUp()
        self._preferences: Preferences = Preferences()

    def tearDown(self):
        super().tearDown()

    def testStartupPosition(self):

        savePosition:      Position = self._preferences.startupPosition
        expectedPosition:  Position = Position(x=66, y=66)

        self._preferences.startupPosition = expectedPosition

        actualPosition: Position = self._preferences.startupPosition

        self.assertEqual(expectedPosition, actualPosition, 'Uh Oh we did not change the position')

        self._preferences.startupPosition = savePosition

    def testStartupSize(self):

        saveSize:     Dimensions = self._preferences.startupSize
        expectedSize: Dimensions = Dimensions(width=666, height=666)

        self._preferences.startupSize = expectedSize

        actualSize: Dimensions = self._preferences.startupSize

        self.assertEqual(expectedSize, actualSize, 'Uh Oh size did not change')

        self._preferences.startupSize = saveSize

    def testGitHubURLOption(self):
        saveOption:     GitHubURLOption = self._preferences.gitHubURLOption
        expectedOption: GitHubURLOption = GitHubURLOption.DoNotAdd

        self._preferences.gitHubURLOption = expectedOption

        actualOption: GitHubURLOption = self._preferences.gitHubURLOption

        self.assertEqual(expectedOption, actualOption, 'GitHubURLOption not correctly set')

        self._preferences.gitHubURLOption = saveOption

    def testCleanTodoistCache(self):

        saveValue:     bool = self._preferences.cleanTodoistCache
        expectedValue: bool = False

        self._preferences.cleanTodoistCache = expectedValue

        actualValue: bool = self._preferences.cleanTodoistCache

        self.assertEqual(expectedValue, actualValue, 'Value not what I expected')

        self._preferences.cleanTodoistCache = saveValue

    def testTodoistProjectName(self):

        saveValue:     str = self._preferences.todoistProjectName
        expectedValue: str = 'BrandonElTonto'

        self._preferences.todoistProjectName = expectedValue

        actualValue: str = self._preferences.todoistProjectName

        self.assertEqual(expectedValue, actualValue, 'El Tonto must have answered')

        self._preferences.todoistProjectName = saveValue

    def testTodoistAPIToken(self):

        saveValue:     str = self._preferences.todoistAPIToken
        expectedValue: str = 'BrandonElPendejo'

        self._preferences.todoistAPIToken = expectedValue
        actualValue: str = self._preferences.todoistAPIToken

        self.assertEqual(expectedValue, actualValue, 'API Token not correctly set')

        self._preferences.todoistAPIToken = saveValue


def suite() -> TestSuite:
    import unittest

    testSuite: TestSuite = TestSuite()

    testSuite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(testCaseClass=TestPreferences))

    return testSuite


if __name__ == '__main__':
    unitTestMain()
